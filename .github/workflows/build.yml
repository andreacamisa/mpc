name: Build

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Mount cache
        id: mount-cache
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/.cache/poetry
          key: poetry-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            poetry-
      
      - name: Create cache directory
        if: steps.mount-cache.outputs.cache-hit != 'true'
        run: mkdir -p ${{ github.workspace }}/.cache/poetry

      -
        name: Linting
        uses: docker/build-push-action@v4
        with:
          push: false
          tags: mpc:lint
          target: lint
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-contexts: poetry_cache=${{ github.workspace }}/.cache/poetry
      
      -
        name: Testing
        uses: docker/build-push-action@v4
        with:
          push: false
          tags: mpc:test
          target: test
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-contexts: poetry_cache=${{ github.workspace }}/.cache/poetry

      -
        name: Format checking
        uses: docker/build-push-action@v4
        with:
          push: false
          tags: mpc:format-check
          target: format-check
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-contexts: poetry_cache=${{ github.workspace }}/.cache/poetry