{
	"name": "Python 3",
	"build": {
		"dockerfile": "Dockerfile",
		"context": "..",
		"args": {
			// Update 'VARIANT' to pick a Python version: 3, 3.10, 3.9, 3.8, 3.7, 3.6
			// Append -bullseye or -buster to pin to an OS version.
			// Use -bullseye variants on local on arm64/Apple Silicon.
			"VARIANT": "3.8-bullseye"
		}
	},
	"customizations": {
		// Configure properties specific to VS Code.
		"vscode": {
			// Set *default* container specific settings.json values on container create.
			"settings": {
				"python.defaultInterpreterPath": "/usr/local/bin/python",
				// Linting settings (flake8 + mypy)
				"flake8.args": [
					"--config",
					"${containerWorkspaceFolder}/.ci/flake8.ini"
				],
				"mypy-type-checker.args": [
					"--config-file",
					"${containerWorkspaceFolder}/.ci/mypy.ini",
					"--python-version",
					"3.8"
				],
				// Formatting (Black + isort)
				"isort.args": [
					"--settings-file",
					"${containerWorkspaceFolder}/.ci/isort.cfg"
				],
				"[python]": {
					"editor.codeActionsOnSave": {
						"source.organizeImports": true
					},
					"editor.defaultFormatter": "ms-python.black-formatter",
					"editor.formatOnSave": true
				},
				"black-formatter.args": [
					"--config",
					"${containerWorkspaceFolder}/.ci/black.cfg"
				],
				// Testing (Pytest)
				"python.testing.unittestEnabled": false,
				"python.testing.pytestEnabled": true,
				"python.testing.pytestArgs": [
					"."
				]
			},
			// Add the IDs of extensions you want installed when the container is created.
			"extensions": [
				"ms-python.python",
				"ms-python.vscode-pylance",
				"ms-python.isort",
				"ms-python.black-formatter",
				"ms-python.flake8",
				"ms-python.mypy-type-checker",
				"eamodio.gitlens"
			]
		}
	},
	"remoteUser": "vscode",
	// Create python virtual environment upon creation of container
	"postCreateCommand": "poetry install --with dev",
	// Forward the user's ~/.ssh directory to the container
	"mounts": [
		"source=${localEnv:HOME}/.ssh,target=/home/vscode/.ssh,type=bind,consistency=cached"
	],
	// Enable running `docker` inside the container using the host machine docker
	"features": {
		"ghcr.io/devcontainers/features/docker-outside-of-docker:1": {}
	},
	"runArgs": [
		"--init" // this is recommended for proper process cleanup
	]
}